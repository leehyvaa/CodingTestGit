파일세팅
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\bits
경로에다 stdc++.h 넣기

기본세팅
#include <bits/stdc++.h>
using namespace std;
ios::sync_with_stdio(0); //c와 c++의 입출력 동기화를 제거
cin.tie(0); // cin 과 cout 을 묶는 과정을 생략하여 cout 전에 cin이 가능해짐


기본 요령

	N의 크기     허용 시간복잡도
	N<11		O(N!)
	N<25		O(2^N)	
	N<100		O(N^4)
	N<500		O(N^3)
	N<3,000		O(N^2 LogN)
	N<5,000		O(N^2)
	N<1,000,000	O(N LogN)
	N<10,000,000	O(N)
	그 이상		O(LogN), O(1)	



STL을 매개변수로 넘길때 &를 안쓰면 변수를 복사해서 쓰기 때문에 시간복잡도 O의N이 추가된다.
따라서 STL을 매개변수로 넘길땐 반드시 & 사용


scanf와 cin 모두 공백을 포함한 문자열을 입력받을때 굉장히 까다로움 둘 다 공백 앞까지만 입력받는다.
따라서 공백을 포함한 문자열은 getline을 사용해야 하고 타입은 반드시 string으로 받아야함

endl 절대 쓰지말것 줄바꿈이 필요하면 개행문자를 써라

출력 마지막에 공백 혹은 줄바꿈이 있어도 문제가 없어서 예외처리 할 필요가 없다


실수 자료형 특징
ㅡㅡㅡㅡ
문제에서 절대/상대 오차를 ~까지 허용한다 라는 표현이 있으면 실수를 사용하는 문제고
이런 표현이 없을 경우 대부분 정수 영역에서 문제를 해결할 수 있다.

실수의 저장,연산 과정은 반드시 오차가 발생한다.
float 유효숫자6 , double은 15자리까지 그나마 좀 안전함

double 에 long long 범위의 정수를 함부러 담으면 안된다. 오차가 생김

실수를 비교할때는 등호를 사용하면 안된다. 주로 10의 -12승 이하의 오차면 동일하다고 사용하는편
if(abs(a-b) < 1e-12) cout << "~~" // 10의 -12승을 1e-12 로 사용
10의 9승을 쓰려면 1e9 식으로 사용 




bfs 기본 틀
ㅡㅡ
전역세팅
1. first, second X,Y 로 define하기
2.일반 보드와 visit 보드 만들기
3.행, 열 nm에 입력하기
4.dx[4] = {1,0,-1,0}; dy[4] = {0,1,0,-1}; 상하좌우 세팅하기

메인함수 앞
5.페어를 저장하는 큐 만들기
6.vis[0][0] =1; 처럼 시작지점 방문
7.큐에다 시작지점 삽입

와일문(큐가 empty가 아닐경우 계속 반복)
8.큐에서 front페어를 pop하고 current로 지정하기

상하좌우 for문
 (방향넣기,continue하기,살아남은거 방문표시하고 큐에다 넣기) 3단계로 이루어짐
{
9.for문으로 상하좌우 확인하기
10.nx와 ny에 nx = cur.x + dx[dir]; 같이 방향넣기

11.nx,ny가 보드 범위 밖이면 continue
12.visit의 nx,ny 좌표가 1 즉 방문이면 continue
13.일반보드의 nx,ny 좌표가 != 1 즉 파란칸이 아닐경우(문제에서 제시한 가능한 칸이 아닐경우) continue

14.continue 안당하고 지금까지 남은 좌표를 visit에 넣기 vis[nx][ny] = 1;
15.큐에다 좌표 푸시하기
}