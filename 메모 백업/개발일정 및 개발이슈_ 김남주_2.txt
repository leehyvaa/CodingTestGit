10월
   ~ 9 제품백로그 작성 및 깃 준비
   ~ 12 래그돌 캐릭터 구조 공부
   ~ 15 래그돌 모델,카메라 만들기
   ~ 17 걷기,달리기 애니메이션 추가
   ~ 18 펀치 ,인풋매니저 추가
   ~ 23 캐릭터 피격 및 충돌 추가, 체력 추가
   ~ 25 기절상태 추가,피격 추가

11월

   ~ 8 아이템 , 투사체 추가 및 스크립터블화
   ~ 11 오브젝트 및 플레이어 잡기 추가
   ~ 21 잡기,던지기,벽타기
   ~ 23 상태이상, 스프링 서버적용
   ~ 23 충돌 데미지, 넉백 스트립터블 오브젝트화
   ~ 28 맵 파일 수정
   ~ 30플레이어 잡기 서버적용
 
12월
   ~ 3 오브젝트 던지기 추가
   ~ 4 원거리공격 서버적용
   ~ 5 아이템 추가 및 상태전이 추가
   ~ 13 인풋매니저 서버화 수정 및 동기화 버그 수정



개발이슈
 - 래그돌 기반 캐릭터 구조 문제

  프로젝트를 처음 시작할 때 기획에 있는 래그돌 형식의 캐릭터를 다뤄본 팀원이 
없었고 이에 대해 팀원들과 레퍼런스를 찾으며 어떤 식으로 플레이어를 만들지 연구했다.
래그돌 캐릭터의 핵심은 몸이 부위별로 오브젝트로 나눠져 있으며 각각 RigidBody가
붙어있고, 부위들은 인체구조와 유사하게 ConfigurableJoint 같은 관절 컴포넌트가
연결하고 있다는 점이었다.

이러한 구조로 인해 여러가지 문제점이 생겼는데 대표적인 두가지가
1. 일반적으로 다운받아 사용하는 애니메이션이 쉽게 적용되지 않는다는 문제가 발생
	해결책으로는 두가지 선택지가 있었는데

   1-1 래그돌 캐릭터 옆에 눈에 보이지는 않지만 애니메이션을 실행중인 일반적인 모델을 숨겨놓고
        이에 대한 움직임을 스크립트로 래그돌 캐릭터에게 복사해서 전달하는 방식
	-장점: 기존 애니메이션을 사용할 수 있어서 작업속도가 빠르다.
	-단점: 캐릭터 움직임이 존재하는 애니메이션에 제약되고, 연구가 덜 된 프로토타입이라 
	        그런지 래그돌 구조의 한계인지 모르겠지만 움직임이 영 시원치 않았다.

   1-2 스크립트로 AddForce를 줘서 캐릭터의 움직임을 애니메이션화 해서 만드는 방식
	-장점: 캐릭터 동작을 하나하나 다 통제할 수 있고, 원하는 동작을 만들어서 쓸 수 있다.
	-단점: 작업시간이 굉장히 오래걸린다.


2. 캐릭터 디자인 에셋과 래그돌 모델(콜라이더,리지드바디,관절등의 컴포넌트가 들어간 뼈대)
   둘의 조합방식을 어떻게 할지에 대한 문제

   2-1 기획에서 전달받은 캐릭터 디자인 에셋을 메인으로 하고 여기다 레그돌 모델을
        커스텀으로 만드는 방식
	-장점: 래그돌 모델을 성공적으로 만들었을 경우 고점이 제일 높고
	        1번 문제점에서 1-1을 선택했을 경우 에셋에 포함된 애니메이션을 사용할때
	        가장 자연스럽다. 또한 캐릭터 디자인 에셋을 고칠 필요가 없다.
	-단점: 래그돌 모델을 만들때 퀄리티있게 만들 수 있다는 보장이 없다.

   2-2 레퍼런스로 구한 안정적인 래그돌 모델 에다 디자인 에셋을 뜯어입혀서 강제로 
        적용시키는 선택지
	-장점: 이미 검증된 래그돌 모델이라 물리적 움직임이 자연스럽다.
	-단점: 기존 애니메이션 사용시 작동을 장담할 수 없다.

나는 플레이어의 구조설계를 담당했기 때문에 이러한 선택지에 대해 결정을 내려야 했고
이 선택이 앞으로의 프로젝트 성패에 큰 영향을 미친다는 부담감에 많은 스트레스를 받았다.

결과적으로 1-2와 2-2를 선택했는데 이 선택에 큰 영향을 미친것은
레퍼런스 게임을 언팩하면 사용한 애니메이션 파일들의 이름을 볼수가 있었는데
레퍼런스 게임은 애니메이션을 거의 사용하지 않았다는 점이다.

이는 레퍼런스 게임이 1-2를 선택했다는 것이고, 그 방식이 시간은 많이 걸리지만 
완성되었을땐 완전한 래그돌 움직임이 가능하다는 증거였다.
그래서 작업속도는 빠르지만 미래가 불확실한 1-1을 포기했고, 
1-2에서 이미 시간이 많이 소요될 것이므로
2번째 문제점에서는 작업시간이 더 적게 걸리는 2-2를 선택하기로 했다.

프로젝트 초반에는 작업진도가 많이 느려 잘못 선택한게 아닌가 싶었는데 
프로젝트가 어느정도 잘 마무리 된걸 보면 잘 선택했던 것 같다.  